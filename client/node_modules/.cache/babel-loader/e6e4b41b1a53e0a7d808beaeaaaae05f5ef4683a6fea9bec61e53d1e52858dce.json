{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genew\\\\Desktop\\\\BitCamp25\\\\bitcamp25\\\\client\\\\src\\\\FlashCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport \"./FlashCards.css\"; // Make sure to create this CSS file\n\n// Set worker using CDN (REQUIRED for react-pdf)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `https://unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;\nfunction FlashCards() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [newCard, setNewCard] = useState({\n    question: \"\",\n    answer: \"\"\n  });\n  const [pdfFile, setPdfFile] = useState(null);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const flipCard = id => {\n    setCards(cards.map(card => card.id === id ? {\n      ...card,\n      flipped: !card.flipped\n    } : card));\n  };\n  const addCard = () => {\n    if (newCard.question.trim() && newCard.answer.trim()) {\n      const id = cards.length > 0 ? Math.max(...cards.map(card => card.id)) + 1 : 1;\n      setCards([...cards, {\n        ...newCard,\n        id,\n        flipped: false\n      }]);\n      setNewCard({\n        question: \"\",\n        answer: \"\"\n      });\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCard({\n      ...newCard,\n      [name]: value\n    });\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      setPdfFile(file);\n      setIsFileUploaded(true);\n    }\n  };\n  const extractTextFromPDF = async pdf => {\n    const numPages = pdf.numPages;\n    let textContent = \"\";\n    for (let i = 1; i <= numPages; i++) {\n      const page = await pdf.getPage(i);\n      const text = await page.getTextContent();\n      const strings = text.items.map(item => item.str);\n      textContent += strings.join(\" \") + \"\\n\";\n    }\n    return textContent;\n  };\n  const onLoadSuccess = async pdf => {\n    const text = await extractTextFromPDF(pdf);\n    // Simple logic: break text into sentences and group them\n    const sentences = text.split(/(?<=[.?!])\\s+/);\n    const newCards = [];\n    for (let i = 0; i < sentences.length - 1; i += 2) {\n      const question = sentences[i];\n      const answer = sentences[i + 1];\n      newCards.push({\n        id: cards.length + i + 1,\n        question,\n        answer,\n        flipped: false\n      });\n    }\n    setCards([...cards, ...newCards]);\n  };\n  const renderEmptyState = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"80\",\n          height: \"80\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"2\",\n            y: \"4\",\n            width: \"20\",\n            height: \"16\",\n            rx: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"2\",\n            y1: \"12\",\n            x2: \"22\",\n            y2: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"12\",\n            y1: \"4\",\n            x2: \"12\",\n            y2: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No flashcards yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your first flashcard using the form on the left or upload a PDF document.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sample-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sample-card-front\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sample-card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your question will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sample-card-arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sample-card-back\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sample-card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your answer will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcards-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Interactive Flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create, study, and master your content with custom flashcards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AutoGenerate PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Import flashcards from your study materials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-upload-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), \"Choose PDF File\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), isFileUploaded && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: pdfFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-preview\",\n            children: /*#__PURE__*/_jsxDEV(Document, {\n              file: pdfFile,\n              onLoadSuccess: onLoadSuccess,\n              onLoadError: err => console.error(\"PDF load error:\", err),\n              children: /*#__PURE__*/_jsxDEV(Page, {\n                pageNumber: 1,\n                width: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-card-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New Flashcard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"question\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"question\",\n              type: \"text\",\n              name: \"question\",\n              value: newCard.question,\n              onChange: handleInputChange,\n              placeholder: \"Enter your question\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"answer\",\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"answer\",\n              name: \"answer\",\n              value: newCard.answer,\n              onChange: handleInputChange,\n              placeholder: \"Enter your answer\",\n              className: \"form-control\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addCard,\n            className: \"add-card-btn\",\n            children: \"Add Flashcard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcards-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Flashcards (\", cards.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), cards.length === 0 ? renderEmptyState() : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcards-grid\",\n          children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flashcard ${card.flipped ? \"flipped\" : \"\"}`,\n            onClick: () => flipCard(card.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flashcard-inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flashcard-front\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: card.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Click to reveal answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flashcard-back\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: card.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Click to see question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashCards, \"raPAYYWNFVsCze96/0YeyHjyicE=\");\n_c = FlashCards;\nexport default FlashCards;\nvar _c;\n$RefreshReg$(_c, \"FlashCards\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","FlashCards","_s","cards","setCards","newCard","setNewCard","question","answer","pdfFile","setPdfFile","isFileUploaded","setIsFileUploaded","flipCard","id","map","card","flipped","addCard","trim","length","Math","max","handleInputChange","e","name","value","target","handleFileUpload","file","files","type","extractTextFromPDF","pdf","numPages","textContent","i","page","getPage","text","getTextContent","strings","items","item","str","join","onLoadSuccess","sentences","split","newCards","push","renderEmptyState","className","children","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","accept","onChange","onLoadError","err","console","error","pageNumber","htmlFor","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/genew/Desktop/BitCamp25/bitcamp25/client/src/FlashCards.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\r\nimport \"./FlashCards.css\"; // Make sure to create this CSS file\r\n\r\n// Set worker using CDN (REQUIRED for react-pdf)\r\npdfjs.GlobalWorkerOptions.workerSrc = `https://unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;\r\n\r\nfunction FlashCards() {\r\n  const [cards, setCards] = useState([]);\r\n  const [newCard, setNewCard] = useState({ question: \"\", answer: \"\" });\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\r\n\r\n  const flipCard = (id) => {\r\n    setCards(\r\n      cards.map((card) =>\r\n        card.id === id ? { ...card, flipped: !card.flipped } : card\r\n      )\r\n    );\r\n  };\r\n\r\n  const addCard = () => {\r\n    if (newCard.question.trim() && newCard.answer.trim()) {\r\n      const id =\r\n        cards.length > 0 ? Math.max(...cards.map((card) => card.id)) + 1 : 1;\r\n      setCards([...cards, { ...newCard, id, flipped: false }]);\r\n      setNewCard({ question: \"\", answer: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewCard({ ...newCard, [name]: value });\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type === \"application/pdf\") {\r\n      setPdfFile(file);\r\n      setIsFileUploaded(true);\r\n    }\r\n  };\r\n\r\n  const extractTextFromPDF = async (pdf) => {\r\n    const numPages = pdf.numPages;\r\n    let textContent = \"\";\r\n    for (let i = 1; i <= numPages; i++) {\r\n      const page = await pdf.getPage(i);\r\n      const text = await page.getTextContent();\r\n      const strings = text.items.map((item) => item.str);\r\n      textContent += strings.join(\" \") + \"\\n\";\r\n    }\r\n    return textContent;\r\n  };\r\n\r\n  const onLoadSuccess = async (pdf) => {\r\n    const text = await extractTextFromPDF(pdf);\r\n    // Simple logic: break text into sentences and group them\r\n    const sentences = text.split(/(?<=[.?!])\\s+/);\r\n    const newCards = [];\r\n    for (let i = 0; i < sentences.length - 1; i += 2) {\r\n      const question = sentences[i];\r\n      const answer = sentences[i + 1];\r\n      newCards.push({\r\n        id: cards.length + i + 1,\r\n        question,\r\n        answer,\r\n        flipped: false,\r\n      });\r\n    }\r\n    setCards([...cards, ...newCards]);\r\n  };\r\n\r\n  const renderEmptyState = () => {\r\n    return (\r\n      <div className=\"empty-state\">\r\n        <div className=\"empty-state-icon\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"80\"\r\n            height=\"80\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <rect x=\"2\" y=\"4\" width=\"20\" height=\"16\" rx=\"2\" />\r\n            <line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\" />\r\n            <line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"20\" />\r\n          </svg>\r\n        </div>\r\n        <h3>No flashcards yet</h3>\r\n        <p>\r\n          Create your first flashcard using the form on the left or upload a PDF\r\n          document.\r\n        </p>\r\n        <div className=\"sample-card\">\r\n          <div className=\"sample-card-front\">\r\n            <div className=\"sample-card-content\">\r\n              <p>Your question will appear here</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"sample-card-arrow\">→</div>\r\n          <div className=\"sample-card-back\">\r\n            <div className=\"sample-card-content\">\r\n              <p>Your answer will appear here</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flashcards-page\">\r\n      <div className=\"header\">\r\n        <h1>Interactive Flashcards</h1>\r\n        <p>Create, study, and master your content with custom flashcards</p>\r\n      </div>\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"sidebar\">\r\n          <div className=\"upload-section\">\r\n            <h3>AutoGenerate PDF</h3>\r\n            <p>Import flashcards from your study materials</p>\r\n            <label className=\"file-upload-btn\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"application/pdf\"\r\n                onChange={handleFileUpload}\r\n              />\r\n              Choose PDF File\r\n            </label>\r\n            {isFileUploaded && (\r\n              <span className=\"file-name\">{pdfFile.name}</span>\r\n            )}\r\n\r\n            {pdfFile && (\r\n              <div className=\"pdf-preview\">\r\n                <Document\r\n                  file={pdfFile}\r\n                  onLoadSuccess={onLoadSuccess}\r\n                  onLoadError={(err) => console.error(\"PDF load error:\", err)}\r\n                >\r\n                  <Page pageNumber={1} width={200} />\r\n                </Document>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"add-card-form\">\r\n            <h3>Create New Flashcard</h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"question\">Question</label>\r\n              <input\r\n                id=\"question\"\r\n                type=\"text\"\r\n                name=\"question\"\r\n                value={newCard.question}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter your question\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"answer\">Answer</label>\r\n              <textarea\r\n                id=\"answer\"\r\n                name=\"answer\"\r\n                value={newCard.answer}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter your answer\"\r\n                className=\"form-control\"\r\n                rows=\"4\"\r\n              />\r\n            </div>\r\n            <button onClick={addCard} className=\"add-card-btn\">\r\n              Add Flashcard\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flashcards-content\">\r\n          <h2>Your Flashcards ({cards.length})</h2>\r\n\r\n          {cards.length === 0 ? (\r\n            renderEmptyState()\r\n          ) : (\r\n            <div className=\"flashcards-grid\">\r\n              {cards.map((card) => (\r\n                <div\r\n                  key={card.id}\r\n                  className={`flashcard ${card.flipped ? \"flipped\" : \"\"}`}\r\n                  onClick={() => flipCard(card.id)}\r\n                >\r\n                  <div className=\"flashcard-inner\">\r\n                    <div className=\"flashcard-front\">\r\n                      <div className=\"card-content\">\r\n                        <p>{card.question}</p>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <small>Click to reveal answer</small>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flashcard-back\">\r\n                      <div className=\"card-content\">\r\n                        <p>{card.answer}</p>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <small>Click to see question</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlashCards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}