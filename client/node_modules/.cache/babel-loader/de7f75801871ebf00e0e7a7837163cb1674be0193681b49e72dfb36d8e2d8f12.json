{"ast":null,"code":"var _jsxFileName = \"/Users/thushanr/Desktop/bitcamp25/client/src/StudyAids.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './StudyAids.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.OPENROUTER_API_KEY;\nfunction StudyAids() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        text: input,\n        sender: 'patient'\n      };\n      setMessages(prev => [...prev, userMessage]);\n      setInput('');\n      const systemMessage = 'You are a supportive and empathetic mental health assistant. ' + 'You provide helpful guidance by inquiring about the causes of their symptoms while ' + 'prioritizing the emotional well-being and safety of the user. ' + 'You are not a licensed therapist but can offer general mental health support and guidance. ' + 'However, before giving any advice, ask at least 3 clarifying questions to the user, one question at a time. ' + 'Each question can build off of the previous or relate to the user’s described symptoms. ' + 'After that, offer advice that builds off the user’s responses.';\n      try {\n        const response = await axios.post('https://openrouter.ai/api/v1/chat/completions',\n        // OpenRouter API endpoint\n        {\n          model: \"deepseek/deepseek-chat\",\n          // OpenRouter model\n          messages: [{\n            role: 'system',\n            content: systemMessage\n          }, ...messages.map(msg => ({\n            role: msg.sender === 'patient' ? 'user' : 'assistant',\n            content: msg.text\n          })), {\n            role: 'user',\n            content: `Mental health context: ${input}`\n          }]\n        }, {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const botMessage = {\n          text: response.data.choices[0].message.content,\n          sender: 'bot'\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error calling OpenRouter API:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          text: 'Error: Unable to get a response from the chatbot.',\n          sender: 'bot'\n        }]);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversations-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Previous Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Conversation 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Conversation 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Conversation 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-conversation-btn\",\n          children: \"Start New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbox-messages\",\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No conversations yet. Start by typing a message below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.sender === 'patient' ? 'sent' : 'received'}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbox-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: handleKeyPress,\n            placeholder: \"Type your message here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyAids, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = StudyAids;\nexport default StudyAids;\nvar _c;\n$RefreshReg$(_c, \"StudyAids\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","process","env","OPENROUTER_API_KEY","StudyAids","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","text","sender","prev","systemMessage","response","post","model","role","content","map","msg","headers","Authorization","botMessage","data","choices","message","prevMessages","error","console","handleKeyPress","e","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/thushanr/Desktop/bitcamp25/client/src/StudyAids.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './StudyAids.css';\n\nconst API_KEY = process.env.OPENROUTER_API_KEY;\n\nfunction StudyAids() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = { text: input, sender: 'patient' };\n      setMessages((prev) => [...prev, userMessage]);\n      setInput('');\n\n      const systemMessage =\n        'You are a supportive and empathetic mental health assistant. ' +\n        'You provide helpful guidance by inquiring about the causes of their symptoms while ' +\n        'prioritizing the emotional well-being and safety of the user. ' +\n        'You are not a licensed therapist but can offer general mental health support and guidance. ' +\n        'However, before giving any advice, ask at least 3 clarifying questions to the user, one question at a time. ' +\n        'Each question can build off of the previous or relate to the user’s described symptoms. ' +\n        'After that, offer advice that builds off the user’s responses.';\n\n      try {\n        const response = await axios.post(\n          'https://openrouter.ai/api/v1/chat/completions',  // OpenRouter API endpoint\n          {\n            model: \"deepseek/deepseek-chat\",  // OpenRouter model\n            messages: [\n              { role: 'system', content: systemMessage },\n              ...messages.map((msg) => ({\n                role: msg.sender === 'patient' ? 'user' : 'assistant',\n                content: msg.text,\n              })),\n              { role: 'user', content: `Mental health context: ${input}` },\n            ],\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${API_KEY}`,\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n\n        const botMessage = {\n          text: response.data.choices[0].message.content,\n          sender: 'bot',\n        };\n\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error calling OpenRouter API:', error);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          {\n            text: 'Error: Unable to get a response from the chatbot.',\n            sender: 'bot',\n          },\n        ]);\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chatbot-page\">\n      <div className=\"container\">\n        <div className=\"conversations-list\">\n          <h3>Previous Conversations</h3>\n          <ul>\n            <li>Conversation 1</li>\n            <li>Conversation 2</li>\n            <li>Conversation 3</li>\n          </ul>\n          <button className=\"new-conversation-btn\">Start New Conversation</button>\n        </div>\n\n        <div className=\"chatbox\">\n          <div className=\"chatbox-messages\">\n            {messages.length === 0 && (\n              <p>No conversations yet. Start by typing a message below.</p>\n            )}\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`message ${msg.sender === 'patient' ? 'sent' : 'received'}`}\n              >\n                <p>{msg.text}</p>\n              </div>\n            ))}\n          </div>\n          <div className=\"chatbox-input\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={handleKeyPress}\n              placeholder=\"Type your message here...\"\n            />\n            <button onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default StudyAids;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}