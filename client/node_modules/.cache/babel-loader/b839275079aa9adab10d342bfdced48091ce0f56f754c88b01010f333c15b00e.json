{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genew\\\\Desktop\\\\BitCamp25\\\\bitcamp25\\\\client\\\\src\\\\MindMap.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./MindMap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MindMap() {\n  _s();\n  const [mindMapData, setMindMapData] = useState(null);\n  const handleGenerateMindMap = async () => {\n    try {\n      const response = await fetch(\"/mindmap.json\");\n      if (!response.ok) {\n        throw new Error(\"Failed to load mind map data.\");\n      }\n      const data = await response.json();\n      setMindMapData(data);\n    } catch (error) {\n      console.error(\"Error loading mind map:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mindmap-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mind Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateMindMap,\n      children: \"Generate Mind Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), mindMapData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mindmap-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted Key Concepts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mindMapData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: node.label\n        }, node.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transcript Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [mindMapData.raw_text.slice(0, 500), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(MindMap, \"39rbu2oUba7fZ5qbnk67e/ThNIc=\");\n_c = MindMap;\nexport default MindMap;\nvar _c;\n$RefreshReg$(_c, \"MindMap\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","MindMap","_s","mindMapData","setMindMapData","handleGenerateMindMap","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","nodes","map","node","label","id","raw_text","slice","_c","$RefreshReg$"],"sources":["C:/Users/genew/Desktop/BitCamp25/bitcamp25/client/src/MindMap.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./MindMap.css\";\r\n\r\nfunction MindMap() {\r\n  const [mindMapData, setMindMapData] = useState(null);\r\n\r\n  const handleGenerateMindMap = async () => {\r\n    try {\r\n      const response = await fetch(\"/mindmap.json\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to load mind map data.\");\r\n      }\r\n      const data = await response.json();\r\n      setMindMapData(data);\r\n    } catch (error) {\r\n      console.error(\"Error loading mind map:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mindmap-page\">\r\n      <h2>Mind Map</h2>\r\n      <button onClick={handleGenerateMindMap}>Generate Mind Map</button>\r\n      {mindMapData && (\r\n        <div className=\"mindmap-result\">\r\n          <h3>Extracted Key Concepts</h3>\r\n          <ul>\r\n            {mindMapData.nodes.map((node) => (\r\n              <li key={node.id}>{node.label}</li>\r\n            ))}\r\n          </ul>\r\n          <h3>Transcript Preview</h3>\r\n          <p>{mindMapData.raw_text.slice(0, 500)}...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MindMap;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMO,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,cAAc,CAACM,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnB,OAAA;MAAQoB,OAAO,EAAEf,qBAAsB;MAAAU,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjEhB,WAAW,iBACVH,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BnB,OAAA;QAAAe,QAAA,EACGZ,WAAW,CAACkB,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAC1BvB,OAAA;UAAAe,QAAA,EAAmBQ,IAAI,CAACC;QAAK,GAApBD,IAAI,CAACE,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLnB,OAAA;QAAAe,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BnB,OAAA;QAAAe,QAAA,GAAIZ,WAAW,CAACuB,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAlCQD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}