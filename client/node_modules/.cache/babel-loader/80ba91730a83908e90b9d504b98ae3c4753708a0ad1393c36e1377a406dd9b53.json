{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genew\\\\Desktop\\\\BitCamp25\\\\bitcamp25\\\\client\\\\src\\\\MGraph.js\",\n  _s = $RefreshSig$();\n// MGraph.js\nimport React, { useEffect, useState } from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MGraph() {\n  _s();\n  const [data, setData] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  useEffect(() => {\n    fetch(\"/birds.json\").then(res => res.json()).then(raw => {\n      const cleaned = {\n        nodes: raw.nodes.map(({\n          id,\n          group,\n          summary\n        }) => ({\n          id,\n          group,\n          summary\n        })),\n        links: raw.links\n      };\n      setData(cleaned);\n    });\n  }, []);\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      position: \"relative\"\n    },\n    children: [data && /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: data,\n      nodeAutoColorBy: \"group\",\n      onNodeClick: handleNodeClick,\n      nodeRelSize: 6 // Increase the default node size for better clickability\n      ,\n      nodeCanvasObject: (node, ctx, globalScale) => {\n        // First draw a circle for better click detection\n        const size = 4;\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size, 0, 2 * Math.PI);\n        ctx.fillStyle = node.color || \"rgba(31, 120, 180, 0.8)\";\n        ctx.fill();\n\n        // Then draw the label\n        const label = node.id;\n        const fontSize = 12 / globalScale;\n        ctx.font = `${fontSize}px Sans-Serif`;\n        const textWidth = ctx.measureText(label).width;\n        const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.2);\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n        ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = node.color || \"rgba(31, 120, 180, 0.8)\";\n        ctx.fillText(label, node.x, node.y);\n\n        // Store dimensions for pointer area\n        node.__bckgDimensions = bckgDimensions;\n        node.__size = size * 2; // Store size for pointer detection\n      },\n      nodePointerAreaPaint: (node, color, ctx) => {\n        var _node$__bckgDimension, _node$__bckgDimension2;\n        // Draw a larger invisible circle for better click detection\n        const pointerRadius = Math.max((((_node$__bckgDimension = node.__bckgDimensions) === null || _node$__bckgDimension === void 0 ? void 0 : _node$__bckgDimension[0]) || 0) / 2, (((_node$__bckgDimension2 = node.__bckgDimensions) === null || _node$__bckgDimension2 === void 0 ? void 0 : _node$__bckgDimension2[1]) || 0) / 2, node.__size || 10) + 4; // Add padding for easier clicking\n\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, pointerRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = color;\n        ctx.fill();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"20px\",\n        right: \"20px\",\n        padding: \"15px\",\n        backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n        boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\",\n        borderRadius: \"5px\",\n        maxWidth: \"300px\",\n        zIndex: 100,\n        border: `2px solid ${selectedNode.color}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: \"0 0 10px 0\",\n          color: selectedNode.color\n        },\n        children: selectedNode.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: selectedNode.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(MGraph, \"aBnOvnUW0++isCA8rP1UtptIK6A=\");\n_c = MGraph;\nvar _c;\n$RefreshReg$(_c, \"MGraph\");","map":{"version":3,"names":["React","useEffect","useState","ForceGraph2D","jsxDEV","_jsxDEV","MGraph","_s","data","setData","selectedNode","setSelectedNode","fetch","then","res","json","raw","cleaned","nodes","map","id","group","summary","links","handleNodeClick","node","style","width","height","position","children","graphData","nodeAutoColorBy","onNodeClick","nodeRelSize","nodeCanvasObject","ctx","globalScale","size","beginPath","arc","x","y","Math","PI","fillStyle","color","fill","label","fontSize","font","textWidth","measureText","bckgDimensions","n","fillRect","textAlign","textBaseline","fillText","__bckgDimensions","__size","nodePointerAreaPaint","_node$__bckgDimension","_node$__bckgDimension2","pointerRadius","max","fileName","_jsxFileName","lineNumber","columnNumber","top","right","padding","backgroundColor","boxShadow","borderRadius","maxWidth","zIndex","border","margin","_c","$RefreshReg$"],"sources":["C:/Users/genew/Desktop/BitCamp25/bitcamp25/client/src/MGraph.js"],"sourcesContent":["// MGraph.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ForceGraph2D from \"react-force-graph-2d\";\r\n\r\nexport default function MGraph() {\r\n  const [data, setData] = useState(null);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/birds.json\")\r\n      .then((res) => res.json())\r\n      .then((raw) => {\r\n        const cleaned = {\r\n          nodes: raw.nodes.map(({ id, group, summary }) => ({\r\n            id,\r\n            group,\r\n            summary,\r\n          })),\r\n          links: raw.links,\r\n        };\r\n        setData(cleaned);\r\n      });\r\n  }, []);\r\n\r\n  const handleNodeClick = (node) => {\r\n    setSelectedNode(node);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\", position: \"relative\" }}>\r\n      {data && (\r\n        <ForceGraph2D\r\n          graphData={data}\r\n          nodeAutoColorBy=\"group\"\r\n          onNodeClick={handleNodeClick}\r\n          nodeRelSize={6} // Increase the default node size for better clickability\r\n          nodeCanvasObject={(node, ctx, globalScale) => {\r\n            // First draw a circle for better click detection\r\n            const size = 4;\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, size, 0, 2 * Math.PI);\r\n            ctx.fillStyle = node.color || \"rgba(31, 120, 180, 0.8)\";\r\n            ctx.fill();\r\n\r\n            // Then draw the label\r\n            const label = node.id;\r\n            const fontSize = 12 / globalScale;\r\n            ctx.font = `${fontSize}px Sans-Serif`;\r\n            const textWidth = ctx.measureText(label).width;\r\n            const bckgDimensions = [textWidth, fontSize].map(\r\n              (n) => n + fontSize * 0.2\r\n            );\r\n\r\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\r\n            ctx.fillRect(\r\n              node.x - bckgDimensions[0] / 2,\r\n              node.y - bckgDimensions[1] / 2,\r\n              ...bckgDimensions\r\n            );\r\n\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.fillStyle = node.color || \"rgba(31, 120, 180, 0.8)\";\r\n            ctx.fillText(label, node.x, node.y);\r\n\r\n            // Store dimensions for pointer area\r\n            node.__bckgDimensions = bckgDimensions;\r\n            node.__size = size * 2; // Store size for pointer detection\r\n          }}\r\n          nodePointerAreaPaint={(node, color, ctx) => {\r\n            // Draw a larger invisible circle for better click detection\r\n            const pointerRadius =\r\n              Math.max(\r\n                (node.__bckgDimensions?.[0] || 0) / 2,\r\n                (node.__bckgDimensions?.[1] || 0) / 2,\r\n                node.__size || 10\r\n              ) + 4; // Add padding for easier clicking\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, pointerRadius, 0, 2 * Math.PI);\r\n            ctx.fillStyle = color;\r\n            ctx.fill();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {selectedNode && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            right: \"20px\",\r\n            padding: \"15px\",\r\n            backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\",\r\n            borderRadius: \"5px\",\r\n            maxWidth: \"300px\",\r\n            zIndex: 100,\r\n            border: `2px solid ${selectedNode.color}`,\r\n          }}\r\n        >\r\n          <h3 style={{ margin: \"0 0 10px 0\", color: selectedNode.color }}>\r\n            {selectedNode.id}\r\n          </h3>\r\n          <p style={{ margin: 0 }}>{selectedNode.summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}